/* character-select.css */
:root {
  --neon-blue: #00f3ff;
  --neon-purple: #bc13fe;
  --dark-bg: #0a0a0a;
  --card-bg: #1a1a1a;
  --locked-overlay: rgba(0, 0, 0, 0.8);
}

body {
  background: var(--dark-bg);
  color: white;
  font-family: "Courier New", monospace;
  margin: 0;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.retro-title {
  text-align: center;
  color: var(--neon-blue);
  text-shadow: 0 0 10px var(--neon-blue);
  font-size: 2.5rem;
  margin: 2rem 0;
}

/* .character-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2rem;
  max-width: 1200px;
  padding: 2rem;
} */

.character-card {
  background: var(--card-bg);
  border: 3px solid var(--neon-blue);
  border-radius: 15px;
  padding: 1rem;
  position: relative;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.character-card:hover:not(.locked) {
  transform: translateY(-5px);
  box-shadow: 0 0 20px var(--neon-blue);
}

.character-image {
  width: 300px;
  height: 300px;
  margin-bottom: 1rem;
  border: 2px solid var(--neon-purple);
  border-radius: 5px;
  overflow: hidden;
}

.character-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

.character-card h2 {
  color: var(--neon-blue);
  margin: 0.5rem 0;
  text-align: center;
}

.stats {
  width: 100%;
  padding: 0.5 rem;
}

.stat {
  margin: 0.75rem 0;
  position: relative;
  overflow: hidden;
}

.stat label {
  display: flex;
  justify-content: space-between;
  color: var(--neon-purple);
  font-size: 0.8rem;
  margin-bottom: 0.3rem;
}

.stat span {
  display: block;
  margin-bottom: 0.25rem;
  font-size: 0.9rem;
  color: var(--neon-purple);
}

.stat-bar {
  height: 8px;
  background: rgba(0, 0, 0, 0.5);
  border: 1px solid var(--neon-blue);
  border-radius: 4px;
  overflow: hidden;
  position: relative;
}

.fill {
  height: 100%;
  background: linear-gradient(
    90deg,
    var(--neon-blue) 0%,
    var(--neon-purple) 100%
  );
  box-shadow: 0 0 10px var(--neon-blue);
  animation: pulse 2s infinite;
  position: relative;
}

.fill::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.2) 50%,
    transparent 100%
  );
  animation: shimmer 2s infinite;
}

/* Digital Health Bar */
.health-stat {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-top: 1rem;
}

.health-pixels {
  display: flex;
  gap: 4px;
}

.health-pixel {
  width: 15px;
  height: 15px;
  background: var(--neon-purple);
  clip-path: polygon(50% 0%, 100% 35%, 100% 70%, 50% 100%, 0% 70%, 0% 35%);
  animation: heartPulse 1.5s infinite alternate;
}

@keyframes heartPulse {
  0% {
    transform: scale(1);
    filter: brightness(1);
  }
  50% {
    transform: scale(1.1);
    filter: brightness(1.3);
  }
  100% {
    transform: scale(1);
    filter: brightness(1);
  }
}

@keyframes pulse {
  0% {
    opacity: 0.8;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.8;
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes healthPulse {
  from {
    filter: brightness(1) drop-shadow(0 0 2px var(--neon-blue));
  }
  to {
    filter: brightness(1.3) drop-shadow(0 0 5px var(--neon-blue));
  }
}

.locked {
  cursor: not-allowed;
  filter: grayscale(1);
  opacity: 0.7;
}

.locked::after {
  content: "LOCKED";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: var(--locked-overlay);
  padding: 1rem 2rem;
  border: 2px solid var(--neon-purple);
  border-radius: 5px;
  font-size: 1.2rem;
  color: var(--neon-purple);
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.9);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modal-content {
  background: var(--card-bg);
  border: 2px solid var(--neon-blue);
  border-radius: 10px;
  padding: 2rem;
  max-width: 500px;
  width: 90%;
}

.modal-buttons {
  display: flex;
  justify-content: space-between;
  margin-top: 2rem;
}

.modal-buttons button {
  background: transparent;
  border: 2px solid var(--neon-blue);
  color: var(--neon-blue);
  padding: 0.5rem 1rem;
  cursor: pointer;
  transition: all 0.3s ease;
}

.modal-buttons button:hover {
  background: var(--neon-blue);
  color: var(--dark-bg);
}

.hidden {
  display: none;
}
/* Add to character-select.css */

/* Base responsive container setup */
.character-select-screen {
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding: 1rem;
  box-sizing: border-box;
}

/* Responsive title */
h1 {
  font-size: clamp(1.5rem, 4vw, 2.5rem);
  text-align: center;
  margin: 2rem auto;
  color: var(--neon-blue);
  text-shadow: 0 0 10px var(--neon-blue);
}

/* Responsive grid layout */
.character-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: clamp(1.5rem, 3vw, 3rem);
  width: 100%;
  padding: clamp(1rem, 2vw, 2rem);
  box-sizing: border-box;
  justify-items: center;
}

/* Responsive character cards */
.character-card {
  min-height: 400px;
  width: 100%;
  max-width: 400px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
}

.character-content {
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

/* Responsive character images */
.character-image {
  width: 100%;
  aspect-ratio: 1;
  max-width: 200px;
  height: auto;
  margin: 0 auto 1rem auto;
}

/* Responsive stats */
.character-stats {
  width: 100%;
  padding: 0.5rem;
}

.stat {
  margin: 0.75rem 0;
}

.stat label {
  font-size: clamp(0.7rem, 1.5vw, 0.9rem);
}

.stat-bar {
  height: clamp(6px, 1.5vw, 10px);
}

/* Responsive modal */
.modal-content {
  width: min(90%, 500px);
  margin: 1rem;
  max-height: 90vh;
  overflow-y: auto;
}

/* Modal buttons responsive layout */
.modal-buttons {
  flex-wrap: wrap;
  gap: 1rem;
}

.modal-buttons button {
  flex: 1;
  min-width: 120px;
  padding: clamp(0.5rem, 2vw, 1rem);
  font-size: clamp(0.8rem, 1.5vw, 1rem);
}

/* Media Queries for different screen sizes */
@media (max-width: 768px) {
  .character-grid {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 5rem;
    padding: 3rem;
  }

  .character-card {
    min-height: 400px;
  }

  .character-image {
    max-width: 250px;
  }
}

@media (max-width: 480px) {
  .character-grid {
    grid-template-columns: 1fr;
  }

  .character-card {
    min-height: 300px;
  }

  .modal-buttons {
    flex-direction: column;
  }

  .modal-buttons button {
    width: 100%;
  }
}

/* Enhanced mobile hover states */
@media (hover: hover) {
  .character-card:hover:not(.locked) {
    transform: translateY(-5px);
    box-shadow: 0 0 20px var(--neon-blue);
  }
}

@media (hover: none) {
  .character-card:active:not(.locked) {
    transform: translateY(-2px);
    box-shadow: 0 0 10px var(--neon-blue);
  }
}

/* Ensure content is visible on very small screens */
@media (max-height: 600px) {
  .character-card {
    min-height: 250px;
  }

  .character-image {
    max-width: 100px;
  }

  h2 {
    font-size: 1rem;
    margin: 0.25rem 0;
  }

  .stat {
    margin: 0.5rem 0;
  }
}

/* High-resolution display optimizations */
@media (min-width: 1920px) {
  .character-select-screen {
    max-width: 1800px;
  }

  .character-card {
    max-width: 500px;
  }

  .character-image {
    max-width: 250px;
  }
}

body::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    45deg,
    rgba(0, 243, 255, 0.1) 0%,
    rgba(188, 19, 254, 0.1) 100%
  );
  animation: gradientShift 10s infinite alternate;
  z-index: -1;
}

/* Subtle grid overlay */
body::after {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(var(--neon-blue) 1px, transparent 1px),
    linear-gradient(90deg, var(--neon-blue) 1px, transparent 1px);
  background-size: 50px 50px;
  opacity: 0.1;
  z-index: -1;
}

/* Scanline effect */
.scanline {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent 50%,
    rgba(0, 0, 0, 0.5) 51%
  );
  background-size: 100% 4px;
  pointer-events: none;
  opacity: 0.1;
  animation: scanline 10s linear infinite;
}

@keyframes gradientShift {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: 100% 100%;
  }
}

@keyframes scanline {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(100vh);
  }
}
.character-image video {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Pause video by default */
/* .character-card video {
  pause: true;
}

/* Play video on hover */
/* .character-card:hover video {
  play: true;
} */ 
/* Add this to your CSS */
.character-image.fifi {
  position: relative;
  overflow: hidden;
}

.character-image.fifi video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}